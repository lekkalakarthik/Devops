#####################DOCKER instalation############
yum clean all
yum update
yum install -y yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum remove -y  podman* buildah*
yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
systemctl start docker
systemctl enable docker
systemctl restart containerd
systemctl enable containerd
systemctl status containerd





############Gold image already##########
From    https://www.youtube.com/watch?v=vqGFlqOXqVw

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1 
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system


vi /etc/docker/daemon.json 
 { 
 "exec-opts": ["native.cgroupdriver=systemd"], "log-driver": "json-file",
 "log-opts": { 
 "max-size": "100m" 
 }, 
 "storage-driver": "overlay2", 
 "storage-opts": [ "overlay2.override_kernel_check=true"
 ] 
 } 
restrt docker

check /etc/sysconfig/network-scripts

#################NEW Instance ##############################
more /etc/hosts
vi /etc/hostname

restart
sysctl --system

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

rm /etc/containerd/config.toml
systemctl restart containerd

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes  //Correct command from Docs

sudo systemctl enable --now kubelet

kubeadm init --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address=192.168.0.110

docker images

kubeadm config images pull

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml



kubectl get nodes


#######################Install My Work###############

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
systemctl stop firewalld
systemctl disable firewalld

swapon -s
swapoff -a
comment /etc/fstab
reboot
vi /etc/hosts
192.168.0.110 master-0.com master-0
192.168.0.111 worker-1.com worker-1
192.168.0.112 worker-2.com worker-2
vi /etc/hostname
chmod 640 /etc/sudoers
add 

## Same thing without a password
%karthik        ALL=(ALL)       NOPASSWD: ALL

sudo usermod -a -G docker karthik



rm /etc/containerd/config.toml
systemctl restart containerd

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes  //Correct command from Docs

sudo systemctl enable --now kubelet

rm /etc/containerd/config.toml
systemctl restart containerd

kubeadm init 

kubectl apply -f https://docs.projectcalico.org/manifets/calico.yml
https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart

https://www.youtube.com/watch?v=vqGFlqOXqVw

https://www.youtube.com/watch?v=BQmZDPE1kTY


kubeadm init --apiserver-advertise-address=192.168.0.110 --pod-network-cidr=192.168.0.0/16 --ignore-preflight-erros=NumCPU

kubeadm init --apiserver-advertise-address=192.168.0.122 --pod-network-cidr=172.16.0.0/12

  --ignore-preflight-errors=Unimplemented
172.16.0.0/12

kubectl apply -f "https://weave.works"

https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm

https://kubernetes.io/docs/concepts/cluster-administration/addons/